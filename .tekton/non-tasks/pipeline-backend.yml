apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-backend
spec:
  params:
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: repository
      description: the git repo containing source code. If empty, the repository url will be found from toolchain
      default: ""
    - name: branch
      description: the branch for the git repo
      default: "main"
    - name: revision
      description: the git revision/commit for the git repo
      default: ""
    - name: pipeline-debug
      description: Pipeline debug mode. Value can be 0 or 1. Default to 0
      default: "0"
    - name: app-name
      description: application name
  workspaces:
    - name: workspace-backend
  tasks:
    - name: extract-repository-url
      taskRef:
        name: toolchain-extract-value
      params:
        - name: expression
          value: '. as $toolchain | ["$(params.repository)"] | if .[0]=="" then $toolchain | .services[] | select(.toolchain_binding.name=="repo") | .dashboard_url else .[0] end'
        - name: pipeline-debug
          value: $(params.pipeline-debug)
    - name: git-clone-repo
      taskRef:
        name: git-clone-repo
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "toolchain-apikey"
        - name: repository
          value: $(tasks.extract-repository-url.results.extracted-value)
        - name: branch
          value: $(params.branch)
        - name: revision
          value: $(params.revision)
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: workspace
          workspace: workspace-backend
    - name: read-global-config
      taskRef:
        name: read-global-config
      params:
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "toolchain-apikey"
      workspaces:
        - name: workspace-backend
          workspace: workspace-backend
      runAfter: [git-clone-repo]
    - name: test-global-config
      taskRef:
        name: test-global-config
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "toolchain-apikey"
      workspaces:
        - name: workspace-backend
          workspace: workspace-backend
      runAfter: [read-global-config]
    - name: icr-containerize
      runAfter: [test-global-config]
      taskRef:
        name: icr-containerize
      params:
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: container-registry-apikey-secret-key
          value: "apikey"
        - name: registry-region
          value: $(tasks.read-global-config.results.IBM_CLOUD_REGION)
        - name: registry-namespace
          value: $(tasks.read-global-config.results.REGISTRY_NAMESPACE)
        - name: image-name
          value: $(tasks.read-global-config.results.IMAGES_NAME_BACKEND):$(tasks.read-global-config.results.REGISTRY_TAG)
        - name: path-to-context
          value: "code/service-catalog"
        - name: path-to-dockerfile
          value: "code/service-catalog"
        - name: additional-tags-script
          value: |
            # The script is providing tag(s) as output
            # But logs can be written as error stderr
            echo "** Here is some Continuous Delivery Tekon Pipeline support configuration properties:" >&2
            ls -l /cd-config >&2
            ls -l /cd-config/environment-properties >&2
            ls -l /cd-config/secure-properties >&2
            echo "Providing an image tag with build number" >&2
            # Add a specific tag with cd build number
            echo "1.0.0-${BUILD_NUMBER}"
        - name: properties-file
          value: ""
        - name: pipeline-debug
          value: $(params.pipeline-debug)
      workspaces:
        - name: source
          workspace: workspace-backend
    - name: trigger-tenant-pipelines-backend
      taskRef:
        name: trigger-tenant-pipelines-backend
      params:
        - name: app-name
          value: $(params.app-name)
        - name: ibmcloud-api
          value: $(params.ibmcloud-api)
        - name: continuous-delivery-context-secret
          value: "secure-properties"
        - name: ibmcloud-apikey-secret-key
          value: "toolchain-apikey"
      workspaces:
        - name: workspace-backend
          workspace: workspace-backend
      runAfter: [icr-containerize]