version: '2'
messages:
  $i18n: locales.yml
template:
  name: "Deploy a multi-tenancy Application on Code Engine"
  description: "tbd ... With this toolchain, ...\n\n ... [console](https://cloud.ibm.com/codeengine/overview).\n\nThe toolchain uses tools that are part of the Continuous Delivery service. If an instance of that service isn't already in the selected resource group or organization, when you click **Create**, it is automatically added.\n\nTo get started, click **Create**."
  header: '![](toolchain.svg?localize)'
  icon: knative.svg
  required:
    - build
    - repo
  info:
    git url: >
      "[" + $env.repository + "](" + $env.repository + ")"
    git branch: >
      "[" + $env.branch + "](" + $env.repository +
          "/tree/" + $env.branch + ")"
    hosted_region: "" # this is set automatically by DevOps
toolchain:
  name: $env.toolchainName || 'multi-tenancy-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  repo:
    # must do logic this way instead of
    # `service_id: $env.source_provider || 'hostedgit'`
    # or source_provider doesn't work
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: '{{toolchain.name}}'
      repo_url: >
        if ($env.type === 'link') {
          $env.app_repo
        } else if ($env.sourceZipUrl) {
          $env.sourceZipUrl
        } else if ($env.template.info.hosted_region === "") {
          'https://github.com/ibm/multi-tenancy'
        } else {
          'https://{{template.info.hosted_region}}.git.cloud.ibm.com/ibm/multi-tenancy'
        }
      source_repo_url: >
        if ($env.type === 'fork' || $env.type === 'clone') {
          $env.app_repo
        } else if ($env.sourceZipUrl) {
          $env.sourceZipUrl
        } else if ($env.template.info.hosted_region === "") {
          'https://github.com/ibm/multi-tenancy'
        } else {
          'https://{{template.info.hosted_region}}.git.cloud.ibm.com/ibm/multi-tenancy'
        }
      type: $env.type || 'clone'
      has_issues: true
      enable_traceability: true
  pipeline-repo:
    service_id: >
      $env.source_provider ? $env.source_provider : 'hostedgit'
    parameters:
      repo_name: '{{toolchain.name}}-pipeline'
      repo_url: $env.repository
      source_repo_url: $env.services.pipeline-repo.parameters.repo_url
      type: 'clone'
      has_issues: false
      enable_traceability: false
      kind: ['pipeline']
  build:
    service_id: pipeline
    parameters:
      services:
        - repo
      name: 'pipeline-backend'
      ui-pipeline: true
      type: 'tekton'
      configuration:
        content:
          $text: config-pipeline-backend.yml
        env:
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          APP_REPO: repo
          APP_REPO_BRANCH: 'main'
          CODE_ENGINE_PROJECT: '{{form.pipeline.parameters.code-engine-project}}'
          CODE_ENGINE_REGION: '{{form.pipeline.parameters.code-engine-region}}'
          CODE_ENGINE_RESOURCE_GROUP: '{{form.pipeline.parameters.code-engine-resource-group}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          IBMCLOUD_API: "https://cloud.ibm.com"
          PIPELINE_REPO: pipeline-repo
          PIPELINE_REPO_BRANCH: 'main'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          SERVICE_BINDINGS: '{{form.pipeline.parameters.service-bindings}}'
        execute: 'manual-run-backend'
  build-backend-tenant:
    service_id: pipeline
    parameters:
      services:
        - repo
      name: 'pipeline-backend-tenant'
      ui-pipeline: true
      type: 'tekton'
      configuration:
        content:
          $text: config-pipeline-backend-tenant.yml
        env:
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          APP_NAME: '{{form.pipeline.parameters.app-name}}'
          APP_REPO: repo
          APP_REPO_BRANCH: 'main'
          CODE_ENGINE_PROJECT: '{{form.pipeline.parameters.code-engine-project}}'
          CODE_ENGINE_REGION: '{{form.pipeline.parameters.code-engine-region}}'
          CODE_ENGINE_RESOURCE_GROUP: '{{form.pipeline.parameters.code-engine-resource-group}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          IBMCLOUD_API: "https://cloud.ibm.com"
          PIPELINE_REPO: pipeline-repo
          PIPELINE_REPO_BRANCH: 'main'
          REGISTRY_NAMESPACE: '{{form.pipeline.parameters.registry-namespace}}'
          REGISTRY_REGION_ID: '{{form.pipeline.parameters.registry-region}}'
          SERVICE_BINDINGS: '{{form.pipeline.parameters.service-bindings}}'
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      app-name: $env.appName || '{{services.repo.parameters.repo_name}}'
      registry-region: '{{registryRegion}}'
      registry-namespace: '{{registryNamespace}}'
      api-key: '{{apiKey}}'
      code-engine-project: '{{codeEngineProject}}'
      code-engine-region: '{{codeEngineRegion}}'
      code-engine-resource-group: '{{codeEngineResourceGroup}}'
      service-bindings: '{{serviceBindingsBase64}}'
    schema:
      $ref: form-schema.json